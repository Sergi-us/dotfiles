return {
  "andymass/vim-matchup",
  event = "VeryLazy",
  config = function()
    -- Grundeinstellungen
    vim.g.matchup_enabled = 1
    vim.g.matchup_matchparen_enabled = 1
    vim.g.matchup_matchparen_deferred = 0  -- Direktes Rendering für bessere Sichtbarkeit
    vim.g.matchup_matchparen_offscreen = { method = "popup" }

    -- Klammern mit Hintergrund hervorheben (SEHR WICHTIG!)
    vim.g.matchup_matchparen_hi_background = 1
    vim.g.matchup_matchparen_hi_surround_always = 1

    -- Längere Anzeigezeit für die Hervorhebung
    vim.g.matchup_matchparen_timeout = 200
    vim.g.matchup_matchparen_insert_timeout = 100

    -- Surround-Unterstützung
    vim.g.matchup_surround_enabled = 1

    vim.api.nvim_exec([[
      function! HighlightMatchParen()
        " Wir rufen hier die zentrale Transparenz-Funktion auf,
        " anstatt die Farben direkt zu setzen
        if exists("*v:lua.set_transparent_background")
          call v:lua.set_transparent_background()
        else
          " Fallback, falls die zentrale Funktion nicht existiert
          highlight MatchParen guibg=#ff5555 guifg=#ffffff gui=bold ctermbg=203 ctermfg=231 cterm=bold
          highlight MatchWord guibg=#ff5555 guifg=#ffffff gui=bold ctermbg=203 ctermfg=231 cterm=bold
        endif
      endfunction

      augroup VeryVisibleMatchParen
        autocmd!
        autocmd VimEnter,ColorScheme * call HighlightMatchParen()
      augroup END
    ]], false)

    -- Sofort ausführen
    vim.cmd("call HighlightMatchParen()")

    -- Debugging-Funktion (optional)
    _G.debug_matchparen = function()
      local current_hl = vim.api.nvim_get_hl(0, {name = "MatchParen"})
      print("MatchParen settings:")
      for k, v in pairs(current_hl) do
        print(k, v)
      end
    end

    -- Keymap zum Neusetzen der Hervorhebung
    vim.api.nvim_set_keymap('n', '<leader>mh', ':call HighlightMatchParen()<CR>',
                           {noremap = true, silent = true, desc = "Reset match highlighting"})
  end,
}

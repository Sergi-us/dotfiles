#!/bin/sh
## 2025-08-07   SARBS
# X11-spezifische Umgebungsvariablen und Konfigurationen.
# Wirkt nur in grafischen X11-Sitzungen.
# Spezifisch für grafische Programme unter X11.

# === DPI-Only Konfiguration ===
# Ein DPI-Wert für alle Frameworks - keine zusätzlichen Skalierungsfaktoren
MASTER_DPI=192
# DPI-Optionen (Vielfache von 96):
#   96  = 1.0× (Windows 95 Standard, Low-DPI)
#   120 = 1.25× (Windows "125%" Skalierung)
#   144 = 1.5× (guter Kompromiss für FullHD auf 14")
#   168 = 1.75× (selten genutzt)
#   192 = 2.0× (ideal für WQHD auf 14", beste Kompatibilität)
#   240 = 2.5× (für 4K auf kleineren Displays)
#   288 = 3.0× (für sehr hohe DPI Displays)


xrandr --dpi $MASTER_DPI
# TODO Xft.dpi wird automatisch gesetzt - alte X11-Apps lesen das (muss noch eingerichtet werden)
SCALE_FACTOR=1.5

# === Themes und GUI ===
# export GTK_THEME=Breeze-Dark                                    # Überschreibt gsettings - sinnvoll für Window Manager ohne GNOME
export GTK3_RC_FILES="$XDG_CONFIG_HOME/gtk-3.0/settings.ini"    # GTK3 liest Einstellungen von hier
# GTK4 nutzt keine RC_FILES mehr - nur noch gsettings!
# export GTK2_RC_FILES="$XDG_CONFIG_HOME/gtk-2.0/gtkrc-2.0"     # GTK2 ist obsolet - nur behalten falls alte Apps (GIMP 2.8, etc.)

# DPI-Only: Alle GTK-Skalierung deaktivieren
unset GDK_DPI_SCALE                                     # dpi-only lösung (Würde DPI-Wert multiplizieren - wollen wir nicht!)
unset GDK_SCALE                                         # Integer-Skalierung - nicht nötig bei DPI-Only

# Qt Settings - nur eine Platform Theme Variable pro Qt-Version!
export QT_QPA_PLATFORMTHEME=qt6ct                       # Qt6 Theme-Integration
export QT5_QPA_PLATFORMTHEME=qt5ct                      # Qt5 Theme-Integration (parallel installierbar)
export QT_FONT_DPI=$MASTER_DPI                          # Explizit setzen - manche Qt-Apps ignorieren xrandr
unset QT_SCALE_FACTOR                                   # DPI-Only - Keine zusätzliche Skalierung!
export QT_SCALE_FACTOR_ROUNDING_POLICY=PassThrough      # Bestimmt, wie nicht-ganzzahlige Skalierungsfaktoren behandelt werden
# PassThrough ist nur relevant wenn QT_SCALE_FACTOR gesetzt wäre - schadet aber nicht


unset ELM_SCALE                                         # Enlightenment/EFL - nutzt jetzt System-DPI

# === Optionale Features (aktuell deaktiviert) ===
# export QT_AUTO_SCREEN_SCALE_FACTOR=1    # VORSICHT: Würde Qt eigene Skalierung berechnen lassen!
                                           # Könnte DPI-Only Ansatz stören
# export QT_ENABLE_HIGHDPI_SCALING=1      # Deprecated - Qt macht das automatisch

# HiDPI Settings
# export QT_ENABLE_HIGHDPI_SCALING=1                    # Option ist - Qt6: veraltet, Qt5: default seit 5.14
# export QT_AUTO_SCREEN_SCALE_FACTOR=1                  # Überschreibt QT_SCALE_FACTOR (kommt vieleicht in frage als alternative zu chromium wrapper skripten )

# === Bildschirm (kann mit MOD+Löschen beinflusst werden) ===
xset s off          # Bildschirmschoner deaktivieren
xset -dpms          # Energiesparmodus deaktivieren
xset s noblank      # Kein automatisches Bildschirm-Blanking
setbg &             # Setzt den Hintergrund mit dem `setbg` Skript

# === Verhalten von Eingabegeräten ===
xbanish &           # Mauszeiger beim Tippen ausblenden
# xinput set-prop 10 "libinput Natural Scrolling Enabled" 1     # Aktiviert Natural Scrolling (Mac-like)


## Lädt Xresources Farben/Einstellungen beim Start
## TODO Trennen von Skalierung und Farben
## wenn xrdb aktiviert, dann "~/.config/x11/xresources" beachten
## xrdb ${XDG_CONFIG_HOME:-$HOME/.config}/x11/xresources & xrdbpid=$!

# === pamgnupg ===
export GPG_TTY=$(tty)
export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
gpg-connect-agent updatestartuptty /bye >/dev/null

# === Liste der automatisch zu startenden Programme ===
autostart="mpd dunst unclutter pipewire remapd picom -d"

for program in $autostart; do
	pidof -sx "$program" || "$program" &
done >/dev/null 2>&1

# Stellt sicher, dass xrdb fertig ist, bevor DWM gestartet wird
[ -n "$xrdbpid" ] && wait "$xrdbpid"

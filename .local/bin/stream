#!/bin/bash
## 2025-06-20 SARBS - Robust Multi-Output
# Multi-Platform Streaming Script mit tee muxer

# Stream Keys - hier deine Keys eintragen:
# export YT_KEY="dein_youtube_key"
# export TW_KEY="dein_twitch_key"
# export FB_KEY="dein_facebook_key"
# export TT_KEY="dein_tiktok_key"

# Aufl√∂sung erkennen
AUFLOSUNG="${AUFLOSUNG:-$(xrandr 2>/dev/null | grep -oE "[0-9]+x[0-9]+" | head -n1)}"
AUFLOSUNG="${AUFLOSUNG:-1920x1080}"  # Fallback
FRAMERATE="30"

# Bitrate nach Aufl√∂sung
case "$AUFLOSUNG" in
    "3840x2160"|"2560x1440") VIDEO_BITRATE="6000k" ;;
    "1920x1080") VIDEO_BITRATE="4000k" ;;
    "1280x720") VIDEO_BITRATE="2500k" ;;
    *) VIDEO_BITRATE="3000k" ;;
esac

AUDIO_BITRATE="128k"
PRESET="veryfast"

# Lokale Aufzeichnung
LOCAL_RECORDING=true
RECORDING_PATH="$HOME/Videos/stream_$(date +%Y%m%d_%H%M%S).mp4"

echo "üöÄ Multi-Platform Stream"
echo "Aufl√∂sung: $AUFLOSUNG @ ${FRAMERATE}fps | Bitrate: $VIDEO_BITRATE"

# Audio-Quellen definieren
# Mikrofon: default (mappt auf dein aktives Mikrofon)
DEFAULT_SOURCE="default"
# Systemaudio: Internes Audio (PCI) - hardcoded
SYS_MONITOR="alsa_output.pci-0000_00_1f.3.analog-stereo.monitor"

# Pr√ºfen ob die Quellen existieren
if pactl list sources short 2>/dev/null | grep -q "^[0-9]*[[:space:]]$SYS_MONITOR"; then
    echo "‚úÖ Mikrofon: default"
    echo "‚úÖ Systemaudio: Internes Audio (PCI)"
else
    echo "‚ùå Warnung: Systemaudio-Quelle nicht gefunden!"
    echo "   Verf√ºgbare Monitor-Quellen:"
    pactl list sources short | grep "\.monitor"
fi

# Tee-Output String bauen
TEE_OUTPUTS=""

# Stream-Ziele
echo -e "\nüéØ Aktive Ziele:"
if [ -n "$YT_KEY" ]; then
    echo "  ‚ñ∂Ô∏è  YouTube"
    TEE_OUTPUTS="${TEE_OUTPUTS}[f=flv:onfail=ignore]rtmp://a.rtmp.youtube.com/live2/$YT_KEY|"
fi

if [ -n "$TW_KEY" ]; then
    echo "  üü£ Twitch"
    TEE_OUTPUTS="${TEE_OUTPUTS}[f=flv:onfail=ignore]rtmp://live.twitch.tv/live/$TW_KEY|"
fi

if [ -n "$FB_KEY" ]; then
    echo "  üîµ Facebook"
    TEE_OUTPUTS="${TEE_OUTPUTS}[f=flv:onfail=ignore]rtmp://live-api-s.facebook.com/rtmp/$FB_KEY|"
fi

if [ -n "$TT_KEY" ]; then
    echo "  ‚ö´ TikTok"
    TEE_OUTPUTS="${TEE_OUTPUTS}[f=flv:onfail=ignore]rtmp://live.tiktok.com/live/$TT_KEY|"
fi

if [ "$LOCAL_RECORDING" = true ]; then
    echo "  üíæ Aufzeichnung: ${RECORDING_PATH##*/}"
    mkdir -p "$(dirname "$RECORDING_PATH")"
    # MP4 statt MKV f√ºr bessere Kompatibilit√§t mit tee
    RECORDING_PATH="${RECORDING_PATH%.mkv}.mp4"
    TEE_OUTPUTS="${TEE_OUTPUTS}[f=mp4:movflags=+faststart]$RECORDING_PATH"
else
    # Entferne letztes | wenn keine lokale Aufzeichnung
    TEE_OUTPUTS="${TEE_OUTPUTS%|}"
fi

echo -e "\nStreaming... (Ctrl+C zum Beenden)\n"

# FFmpeg starten
if [ -n "$DEFAULT_SOURCE" ] && [ -n "$SYS_MONITOR" ]; then
    # Mit Mikrofon + Systemaudio
    ffmpeg -hide_banner -loglevel warning -stats \
      -probesize 10M -f x11grab -r $FRAMERATE -s $AUFLOSUNG -i ${DISPLAY:-:0.0} \
      -f pulse -i "$DEFAULT_SOURCE" \
      -f pulse -i "$SYS_MONITOR" \
      -filter_complex "[1:a]volume=1.0[mic];[2:a]volume=0.8[sys];[mic][sys]amix=inputs=2:normalize=0[audio]" \
      -map 0:v -map "[audio]" \
      -c:v libx264 -preset "$PRESET" -maxrate "$VIDEO_BITRATE" -bufsize 5000k \
      -pix_fmt yuv420p -g 60 -keyint_min 60 \
      -c:a aac -ar 44100 -b:a "$AUDIO_BITRATE" \
      -f tee "$TEE_OUTPUTS"

elif [ -n "$SYS_MONITOR" ]; then
    # Nur Systemaudio
    ffmpeg -hide_banner -loglevel warning -stats \
      -probesize 10M -f x11grab -r $FRAMERATE -s $AUFLOSUNG -i ${DISPLAY:-:0.0} \
      -f pulse -i "$SYS_MONITOR" \
      -map 0:v -map 1:a \
      -c:v libx264 -preset "$PRESET" -maxrate "$VIDEO_BITRATE" -bufsize 5000k \
      -pix_fmt yuv420p -g 60 -keyint_min 60 \
      -c:a aac -ar 44100 -b:a "$AUDIO_BITRATE" \
      -f tee "$TEE_OUTPUTS"

elif [ -n "$DEFAULT_SOURCE" ]; then
    # Nur Mikrofon
    ffmpeg -hide_banner -loglevel warning -stats \
      -probesize 10M -f x11grab -r $FRAMERATE -s $AUFLOSUNG -i ${DISPLAY:-:0.0} \
      -f pulse -i "$DEFAULT_SOURCE" \
      -map 0:v -map 1:a \
      -c:v libx264 -preset "$PRESET" -maxrate "$VIDEO_BITRATE" -bufsize 5000k \
      -pix_fmt yuv420p -g 60 -keyint_min 60 \
      -c:a aac -ar 44100 -b:a "$AUDIO_BITRATE" \
      -f tee "$TEE_OUTPUTS"

else
    # Kein Audio
    echo "‚ö†Ô∏è  Kein Audio verf√ºgbar - Stream nur mit Video"
    ffmpeg -hide_banner -loglevel warning -stats \
      -probesize 10M -f x11grab -r $FRAMERATE -s $AUFLOSUNG -i ${DISPLAY:-:0.0} \
      -f lavfi -i anullsrc=channel_layout=stereo:sample_rate=48000 \
      -map 0:v -map 1:a \
      -c:v libx264 -preset "$PRESET" -maxrate "$VIDEO_BITRATE" -bufsize 5000k \
      -pix_fmt yuv420p -g 60 -keyint_min 60 \
      -c:a aac -ar 44100 -b:a "$AUDIO_BITRATE" \
      -f tee "$TEE_OUTPUTS"
fi

echo -e "\n‚úÖ Stream beendet."

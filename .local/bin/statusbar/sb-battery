#!/bin/sh
## 2025-03-06 SARBS

# Zeigt den aggregierten Batteriestand mit Symbolen entsprechend dem Ladestand an

adjust_brightness() {
    if command -v brightnessctl &> /dev/null; then
        tool="brightnessctl"
    elif command -v xbacklight &> /dev/null; then
        tool="xbacklight"
    else
        notify-send " Kein Helligkeitstool gefunden"
        exit 1
    fi

    case $1 in
        inc)
            if [ "$tool" = "brightnessctl" ]; then
                brightnessctl set +5%
            else
                xbacklight -inc 10
            fi
            ;;
        dec)
            if [ "$tool" = "brightnessctl" ]; then
                brightnessctl set 5%-
            else
                xbacklight -dec 10
            fi
            ;;
        *)
            notify-send " Ungültige Operation"
            exit 1
            ;;
    esac
}

case $BLOCK_BUTTON in
    1) ;;
    2) ;;
    3) notify-send "Batteriemodul" "
- 󱕒 Scrollen, um Helligkeit zu ändern." ;;
    4) adjust_brightness inc ;;
    5) adjust_brightness dec ;;
    6) setsid -f "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

get_battery_symbol() {
    capacity=$1
    [ "$capacity" -le 10 ] && { echo "󰂃"; return; }
    [ "$capacity" -le 20 ] && { echo "󰁺"; return; }
    [ "$capacity" -le 30 ] && { echo "󰁻"; return; }
    [ "$capacity" -le 40 ] && { echo "󰁼"; return; }
    [ "$capacity" -le 50 ] && { echo "󰁽"; return; }
    [ "$capacity" -le 60 ] && { echo "󰁾"; return; }
    [ "$capacity" -le 70 ] && { echo "󰁿"; return; }
    [ "$capacity" -le 80 ] && { echo "󰂀"; return; }
    [ "$capacity" -le 90 ] && { echo "󰂁"; return; }
    echo "󰁹"
}

get_battery_symbol_charger() {
    capacity=$1
    [ "$capacity" -le 10 ] && { echo "󰢜 "; return; }
    [ "$capacity" -le 20 ] && { echo "󰂆 "; return; }
    [ "$capacity" -le 30 ] && { echo "󰂇 "; return; }
    [ "$capacity" -le 40 ] && { echo "󰂈 "; return; }
    [ "$capacity" -le 50 ] && { echo "󰢝 "; return; }
    [ "$capacity" -le 60 ] && { echo "󰂉 "; return; }
    [ "$capacity" -le 70 ] && { echo "󰢞 "; return; }
    [ "$capacity" -le 80 ] && { echo "󰂊 "; return; }
    [ "$capacity" -le 90 ] && { echo "󰂋 "; return; }
    echo "󰂅 "
}

get_connection_status() {
    for ac in /sys/class/power_supply/AC* /sys/class/power_supply/Mains; do
        [ -e "$ac/online" ] || continue
        [ "$(cat "$ac/online")" -eq 1 ] && { echo "AC"; return; }
    done
    echo "BAT"
}

# Aggregiere alle Batterien
total_capacity=0
battery_count=0
for battery in /sys/class/power_supply/BAT?*; do
    [ -d "$battery" ] || continue
    capacity=$(cat "$battery/capacity" 2>/dev/null)
    total_capacity=$((total_capacity + capacity))
    battery_count=$((battery_count + 1))
done

[ "$battery_count" -gt 0 ] && overall_capacity=$((total_capacity / battery_count)) || overall_capacity=0

# Wähle das entsprechende Symbol basierend auf dem AC-/BAT-Status
if [ "$(get_connection_status)" = "AC" ]; then
    symbol=$(get_battery_symbol_charger "$overall_capacity")
else
    symbol=$(get_battery_symbol "$overall_capacity")
fi

# Warnsymbol und kritische Benachrichtigung, wenn Akkuladung <= 10%
if [ "$overall_capacity" -le 5 ]; then
    warn=" "
    notify-send -u critical "Kritischer Batterieladung" "Akkuladung bei ${overall_capacity}%!"
else
    warn=""
fi

output="$symbol$warn$overall_capacity%"
echo "$output"

#!/bin/sh
## 2025-03-25 SARBS

# TODO Entscheiden ob brightnessctl oder xbacklight zum einsatz kommt
# TODO Code Vereinfachen

# Zeigt den aggregierten Batteriestand mit Symbolen entsprechend dem Ladestand an

adjust_brightness() {
    if command -v brightnessctl &> /dev/null; then
        tool="brightnessctl"
    elif command -v xbacklight &> /dev/null; then
        tool="xbacklight"
    else
        notify-send " Kein Helligkeitstool gefunden"
        exit 1
    fi

    case $1 in
        inc)
            if [ "$tool" = "brightnessctl" ]; then
                brightnessctl set +5%
            else
                xbacklight -inc 10
            fi
            ;;
        dec)
            if [ "$tool" = "brightnessctl" ]; then
                brightnessctl set 5%-
            else
                xbacklight -dec 10
            fi
            ;;
        *)
            notify-send " Ungültige Operation"
            exit 1
            ;;
    esac
}

# Sammelt Informationen über alle Batterien
get_all_batteries_info() {
    battery_info=""
    for battery in /sys/class/power_supply/BAT?*; do
        [ -d "$battery" ] || continue
        battery_name=$(basename "$battery")
        capacity=$(cat "$battery/capacity" 2>/dev/null)
        battery_info="${battery_info}${battery_name}: ${capacity}%\n"
    done
    echo "$battery_info"
}

get_battery_symbol() {
    capacity=$1
    if [ "$capacity" -le 10 ]; then
        echo "󰂃"
    elif [ "$capacity" -le 20 ]; then
        echo "󰁺"
    elif [ "$capacity" -le 30 ]; then
        echo "󰁻"
    elif [ "$capacity" -le 40 ]; then
        echo "󰁼"
    elif [ "$capacity" -le 50 ]; then
        echo "󰁽"
    elif [ "$capacity" -le 60 ]; then
        echo "󰁾"
    elif [ "$capacity" -le 70 ]; then
        echo "󰁿"
    elif [ "$capacity" -le 80 ]; then
        echo "󰂀"
    elif [ "$capacity" -le 90 ]; then
        echo "󰂁"
    else
        echo "󰁹"
    fi
}

get_battery_symbol_charger() {
    capacity=$1
    if [ "$capacity" -le 10 ]; then
        echo "󰢜 "
    elif [ "$capacity" -le 20 ]; then
        echo "󰂆 "
    elif [ "$capacity" -le 30 ]; then
        echo "󰂇 "
    elif [ "$capacity" -le 40 ]; then
        echo "󰂈 "
    elif [ "$capacity" -le 50 ]; then
        echo "󰢝 "
    elif [ "$capacity" -le 60 ]; then
        echo "󰂉 "
    elif [ "$capacity" -le 70 ]; then
        echo "󰢞 "
    elif [ "$capacity" -le 80 ]; then
        echo "󰂊 "
    elif [ "$capacity" -le 90 ]; then
        echo "󰂋 "
    else
        echo "󰂅 "
    fi
}

get_connection_status() {
    for ac in /sys/class/power_supply/AC* /sys/class/power_supply/Mains; do
        [ -e "$ac/online" ] || continue
        [ "$(cat "$ac/online")" -eq 1 ] && { echo "AC"; return; }
    done
    echo "BAT"
}

case $BLOCK_BUTTON in
    1) ;;
    2) ;;
    3)
        all_batteries=$(get_all_batteries_info)
        notify-send "Batteriemodul" "
Batteriestand:
${all_batteries}
- 󱕒 Scrollen, um Helligkeit zu ändern." ;;
    4) adjust_brightness inc ;;
    5) adjust_brightness dec ;;
    6) setsid -f "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

# Aggregiere alle Batterien
total_capacity=0
battery_count=0
for battery in /sys/class/power_supply/BAT?*; do
    [ -d "$battery" ] || continue
    capacity=$(cat "$battery/capacity" 2>/dev/null)
    total_capacity=$((total_capacity + capacity))
    battery_count=$((battery_count + 1))
done

[ "$battery_count" -gt 0 ] && overall_capacity=$((total_capacity / battery_count)) || overall_capacity=0

# Wähle das entsprechende Symbol basierend auf dem AC-/BAT-Status
if [ "$(get_connection_status)" = "AC" ]; then
    symbol=$(get_battery_symbol_charger "$overall_capacity")
else
    symbol=$(get_battery_symbol "$overall_capacity")
fi

# Warnsymbol und kritische Benachrichtigung, wenn Akkuladung <= 10%
if [ "$overall_capacity" -le 3 ]; then
    warn=" "
    notify-send -u critical "Kritischer Batterieladung" "Akkuladung bei ${overall_capacity}%!"
else
    warn=""
fi

# output="$symbol$warn$overall_capacity%"
output="$symbol$warn"
echo " $output"

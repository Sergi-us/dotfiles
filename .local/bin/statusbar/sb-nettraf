#!/bin/sh
## 2025-06-13 SARBS
## Angepasst: Zeigt Traffic nur bei aktiver Netzwerkverbindung (Hardware-Check)

# Module showing network traffic. Shows how much data has been received (RX) or
# transmitted (TX) since the previous time this script ran. So if run every
# second, gives network traffic per second.

case $BLOCK_BUTTON in
	1) setsid -f "$TERMINAL" -e bmon ;;
	3) notify-send " Netzwerk Daten Modul" " Daten Empfangen
 Daten gesendet" ;;
	6) setsid -f "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

# Funktion zur Überprüfung der Netzwerkverbindung über Hardware
check_network() {
    # Erkenne interfaces
    wifi_iface=$(ls /sys/class/net | grep "^w" | head -n 1)
    eth_iface=$(ls /sys/class/net | grep "^e" | head -n 1)

    # Prüfe ob WiFi aktiv ist
    if [ "$(cat /sys/class/net/$wifi_iface/operstate 2>/dev/null)" = 'up' ]; then
        return 0  # WiFi ist verbunden
    fi

    # Prüfe ob Ethernet aktiv ist
    if [ "$(cat /sys/class/net/$eth_iface/operstate 2>/dev/null)" = 'up' ]; then
        return 0  # Ethernet ist verbunden
    fi

    # Prüfe ob VPN/Tunnel aktiv ist
    if [ -n "$(cat /sys/class/net/tun*/operstate 2>/dev/null | grep 'up')" ]; then
        return 0  # VPN ist verbunden
    fi

    # Keine aktive Verbindung gefunden
    return 1
}

update() {
    sum=0
    for arg; do
        read -r i < "$arg"
        sum=$(( sum + i ))
    done
    cache=/tmp/${1##*/}
    [ -f "$cache" ] && read -r old < "$cache" || old=0
    printf %d\\n "$sum" > "$cache"
    printf %d\\n $(( sum - old ))
}

# Prüfe Netzwerkverbindung über Hardware
if check_network; then
    # Verbunden - zeige Traffic
    rx=$(update /sys/class/net/[ew]*/statistics/rx_bytes)
    tx=$(update /sys/class/net/[ew]*/statistics/tx_bytes)
    printf "%4sB %4sB" $(numfmt --to=iec $rx $tx)
else
    # Offline - zeige Offline-Symbol
    printf " " # Nerd Font Symbol für "Offline"
    # printf "󰤭" # Nerd Font Symbol für "Offline"
fi

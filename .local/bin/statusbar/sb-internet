#!/bin/sh
## 2025-06-13 SARBS

# Prozente in Statusbar anzeigen? (true/false)
SHOW_PERCENT=false

case $BLOCK_BUTTON in
    1) # Linksklick: Wifi ein/ausschalten
        wifi_status=$(nmcli radio wifi)
        if [ "$wifi_status" = "enabled" ]; then
            # Wifi ist an, ausschalten
            nmcli radio wifi off
            notify-send "󰖪 Wifi" "Wifi wurde deaktiviert"
        else
            # Wifi ist aus, einschalten
            nmcli radio wifi on
            notify-send "󰤥 Wifi" "Wifi wird aktiviert..."
        fi
        pkill -RTMIN+23 dwmblocks
        ;;
    2) # 󰳾 Netzwerkmanager (mittelklick)
        "$TERMINAL" -e nmtui; pkill -RTMIN+23 dwmblocks ;;
    3) # Rechtsklick: Nur aktuelle Verbindung anzeigen (schnell!)
        wifi_iface=$(ls /sys/class/net | grep "^w" | head -n 1)

        # Aktuelle Verbindung - schnell ohne Scan
        if [ -n "$wifi_iface" ] && [ "$(cat /sys/class/net/$wifi_iface/operstate 2>/dev/null)" = 'up' ]; then
            # SSID aus NetworkManager connection
            current_ssid=$(nmcli -t -f name connection show --active | head -1)
            signal_strength=$(awk '/^\s*w/ { print int($3 * 100 / 70) }' /proc/net/wireless)

            # Signalstärke-Ic## Wifi-Symbole:
            ## 󰤥 (76-100%) - Stark
            ## 󰤢 (51-75%) - Gut
            ## 󰤟 (26-50%) - Mäßig
            ## 󰤯 (0-25%) - Schwach
            ## 󰖪 Wifi ausgeschaltet
            ## 󰤫 Keine Verbindungon
            if [ "$signal_strength" -ge 76 ]; then
                signal_icon="󰤥"
            elif [ "$signal_strength" -ge 51 ]; then
                signal_icon="󰤢"
            elif [ "$signal_strength" -ge 26 ]; then
                signal_icon="󰤟"
            else
                signal_icon="󰤯"
            fi

            current_info="$signal_icon Verbunden: ${current_ssid} (${signal_strength}%)"
        else
            current_info="󰤫 Nicht verbunden"
        fi

        notify-send "󰳾 Wifi Status" "$current_info

󰍉 Linksklick: Wifi ein/aus
󰍉 Mittelklick: NetworkManager öffnen"
        ;;
    4) ;;
    5) # Button 5: Verfügbare Netzwerke scannen (nur bei Bedarf)
        notify-send "🔍 Scanne Netzwerke..." "Bitte warten..."

        # Hier der langsame Scan - nur wenn explizit gewünscht
        available_networks=$(nmcli -t -f ssid,signal dev wifi | grep -v '^$' | sort -t: -k2 -nr | head -5 | while read line; do
            ssid=$(echo "$line" | cut -d: -f1 | cut -c1-20)
            signal=$(echo "$line" | cut -d: -f2)
            if [ "$signal" -ge 76 ]; then
                icon="󰤥"
            elif [ "$signal" -ge 51 ]; then
                icon="󰤢"
            elif [ "$signal" -ge 26 ]; then
                icon="󰤟"
            else
                icon="󰤯"
            fi
            echo "$icon $ssid ($signal%)"
        done)

        notify-send "📡 Verfügbare Netzwerke" "$available_networks"
        ;;
    6) setsid -f "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

# Erkenne interfaces
wifi_iface=$(ls /sys/class/net | grep "^w" | head -n 1)
eth_iface=$(ls /sys/class/net | grep "^e" | head -n 1)

# Wifi mit prozentabhängigen Symbolen
if [ -n "$wifi_iface" ]; then
    if [ "$(cat /sys/class/net/$wifi_iface/operstate 2>/dev/null)" = 'up' ] ; then
        signal_percent=$(awk '/^\s*w/ { print int($3 * 100 / 70) }' /proc/net/wireless)
        if [ "$signal_percent" -ge 76 ]; then
            wifiicon="󰤥"
        elif [ "$signal_percent" -ge 51 ]; then
            wifiicon="󰤢"
        elif [ "$signal_percent" -ge 26 ]; then
            wifiicon="󰤟"
        else
            wifiicon="󰤯"
        fi
        # Optional: Prozente anhängen
        [ "$SHOW_PERCENT" = "true" ] && wifiicon="$wifiicon ${signal_percent}%"
    elif [ "$(cat /sys/class/net/$wifi_iface/operstate 2>/dev/null)" = 'down' ] ; then
        [ "$(cat /sys/class/net/$wifi_iface/flags 2>/dev/null)" = '0x1003' ] && wifiicon="󰖪" || wifiicon="󰤫"
    fi
else
    wifiicon="󰤫"
fi

# Ethernet
# 󰲜 kein Ethernet
# 󰱔 Ethernet angeschlossen
[ "$(cat /sys/class/net/$eth_iface/operstate 2>/dev/null)" = 'up' ] && ethericon="󰱔" || ethericon="󰲜"

# VPN Tunnel
# 󰢭 vpn is aktiv
[ -n "$(cat /sys/class/net/tun*/operstate 2>/dev/null)" ] && tunicon="󰢭"

printf "%s%s%s\n" "$wifiicon $ethericon $tunicon"
# printf "%s%s%s\n" "[$ethericon $wifiicon $tunicon]"
